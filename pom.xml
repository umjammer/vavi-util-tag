<?xml version="1.0" encoding="UTF-8"?>

<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>vavi</groupId>
  <artifactId>vavi-util-tag</artifactId>
  <version>1.0.5</version>

  <name>Vavi Util Tag API</name>
  <organization>
    <name>vavi</name>
  </organization>
  <url>https://github.com/umjammer/vavi-util-tag</url>
  <description>Audio File TAG API</description>
  <scm>
    <url>https://github.com/umjammer/vavi-util-tag</url>
  </scm>
  <issueManagement>
    <url>https://github.com/umjammer/vavi-util-tag/issues</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/umjammer/vavi-util-tag</url>
    </repository>
  </distributionManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>8</source>
          <target>8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <argLine>
            -Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
          </argLine>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/umjammer/*</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.9.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-commons</artifactId>
      <version>1.1.8</version>
    </dependency>
    <dependency>
      <groupId>com.github.albfernandez</groupId>
      <artifactId>juniversalchardet</artifactId>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-commons-sandbox</artifactId>
      <version>0.4.2</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nothome</groupId>
      <artifactId>javaxdelta</artifactId>
      <version>2.0.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>vavi</groupId>
      <artifactId>vavi-util-screenscraping</artifactId>
      <version>1.0.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.josephw</groupId>
      <artifactId>titl</artifactId>
      <version>e706037097</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.36</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>mp3clean_d</id>
      <activation>
        <property>
          <name>dir</name>
          <value/>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- mp3 remove unnecessary tags by directory -->
            <!-- exec:java -->
            <!-- $ mvn -P mp3clean_d exec:java -Ddir='"dir"' -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>Test7</mainClass>
              <classpathScope>test</classpathScope>
              <arguments>
                <argument>${dir}</argument>
                <argument>.*\.([Mm][Pp]3)</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>mp3tag_d_i</id>
      <activation>
        <property>
          <name>itunes.dir</name>
          <value/>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- mp3 find unnecessary tags by directory -->
            <!-- exec:java -->
            <!-- $ mvn -P mp3tag_d_i exec:java -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>Test7_2</mainClass>
              <classpathScope>test</classpathScope>
              <arguments>
                <argument>${itunes.dir}</argument>
                <argument>.*\.([Mm][Pp]3)</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>mp3tag_d</id>
      <activation>
        <property>
          <name>dir</name>
          <value/>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- mp3 find unnecessary tags by directory -->
            <!-- exec:java -->
            <!-- $ mvn -P mp3tag_d exec:java -Ddir='"dir"' -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>Test7_2</mainClass>
              <classpathScope>test</classpathScope>
              <arguments>
                <argument>${dir}</argument>
                <argument>.*\.([Mm][Pp]3)</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- mvn -P mp3show antrun:run -Dinfile='file' -->
      <id>mp3show</id>
      <activation>
        <property>
          <name>infile</name>
          <value/>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- GOOD: fork: OK, test jars: OK, user args, default args: OK -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <java classname="Test11" fork="true">
                  <classpath>
                    <path refid="maven.compile.classpath"/>
                    <path refid="maven.test.classpath"/>
                  </classpath>
                  <jvmarg value="-Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties"/>
                  <arg value="${infile}"/>
                </java>
              </target>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
